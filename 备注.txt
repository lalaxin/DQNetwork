userregion.xlsx文件   每1分钟一个时间间隔，存储8点到10点  120个时间段的用户在每个时间段每个区域的用户个数
   （每一个时间段内（一分钟）的用户很少，但由于用户之间可能是相互影响的，所以处理的是一个时间段内的用户。若处理十分钟，不符合实际）
                                    解决方案1：先设置10分钟处理一次，使得用户数量多一点，查看处理结果

userregion2.xlsx文件 每十分钟一个时间间隔，存储8点到10点（sheet2存储的这两个小时内的用户数，边界区域用户数较少）
      （但是只有12个时间段，时间槽较少，以及边界区域用户数较少）
                                    解决方案：多处理一些时间段，例如处理10小时，一起120个时间段，用户数较多

userregion12-14.xlsx文件 每十分钟一个时间间隔，存储的12-14点（8月15号）

userregion18-20.xlsx文件 每十分钟一个时间间隔，存储的12-14点（8月15号）

user.xlsx文件   和userregion2.xlsx存储的是同样的数据，由于时间段要拉长，【通过users.py文件获得，从data2.xlsx中获取数据】所以：
                                    修改方案：之后用来存储8点到18点的一共120个时间段的数据

regionminute10_15.xlsx文件  存储的是8月1号到8月14号中工作日中8-10点的数据【通过user3_15.py文件获得】，用来预测15号8-10点的数据，存入region_1.xlsx文件中
regionminute10_12-14.xlsx文件  data3_12-14-sheet2   12:00-14:00  十分钟时间间隔【通过user3_16.py文件获得】 
regionminute10_18-20.xlsx文件  data3_18-20-sheet2   18:00-20:00  十分钟时间间隔 【通过user3_17.py文件获得】 

region_1.xlsx文件   根据regionminute10-15.xlsx文件来预测，通过lstm_test.py文件来预测区域数据（根据36行的usecols来循环100个区域）
lstmtest1.py  对于某一个区域用户的预测，用于测试

data4.xlsx文件   时间间隔十分钟，8月15号8点到10点的数据,【通过user3_1.py文件获得，并未写入文件，data4.xlsx文件存储的原数据15号8点-10点】
data4_18-20.xlsx文件  时间间隔十分钟，8月15号18点到20点的数据,【通过user3_2.py文件获得】
data4_12-14.xlsx文件  时间间隔十分钟，8月15号12点到14点的数据,【通过user3_3.py文件获得】

simplekm2.py文件
    使用的是自己写的二部图匹配，二部图最大匹配，权重设置为-d,当用户得最大步行距离小于celllength时，权重设置为-inf,即用户只能去邻近区域还车

simpledqn2.py文件
    更改simpledqn的状态，改为直接和预算相关（缺车区域，拿到车的用户，剩余预算） 动作改为一人份一人份的预算

4*4网格需求
userdemand [[[275, 1165, 150.0, 750.0, 1680.0, -1, -1], [241, 1014, 1050.0, 1050.0, 1680.0, -1, -1], [777, 429, 150.0, 1050.0, 1680.0, -1, -1], [58, 798, 1050.0, 150.0, 1680.0, -1, -1], [912, 545, 450.0, 150.0, 1680.0, -1, -1], [650, 62, 150.0, 150.0, 1680.0, -1, -1], [1108, 18, 1050.0, 450.0, 1680.0, -1, -1], [864, 59, 450.0, 1050.0, 1680.0, -1, -1], [1015, 1132, 450.0, 750.0, 1680.0, -1, -1], [472, 448, 1050.0, 750.0, 1680.0, -1, -1], [44, 852, 150.0, 450.0, 1680.0, -1, -1], [607, 247, 750.0, 1050.0, 1680.0, -1, -1], [1039, 388, 750.0, 750.0, 1680.0, -1, -1], [1022, 1034, 1050.0, 150.0, 1680.0, -1, -1], [983, 497, 1050.0, 1050.0, 1680.0, -1, -1], [354, 751, 750.0, 150.0, 1680.0, -1, -1], [898, 1041, 150.0, 450.0, 1680.0, -1, -1], [1066, 805, 750.0, 1050.0, 1680.0, -1, -1], [60, 961, 150.0, 750.0, 1680.0, -1, -1], [1184, 806, 450.0, 450.0, 1680.0, -1, -1]], [[1028, 464, 150.0, 450.0, 1680.0, -1, -1], [1105, 1122, 450.0, 1050.0, 1680.0, -1, -1], [1052, 704, 750.0, 1050.0, 1680.0, -1, -1], [551, 1122, 150.0, 1050.0, 1680.0, -1, -1], [1049, 264, 450.0, 1050.0, 1680.0, -1, -1], [114, 985, 750.0, 450.0, 1680.0, -1, -1], [1033, 846, 1050.0, 750.0, 1680.0, -1, -1], [848, 708, 150.0, 750.0, 1680.0, -1, -1], [938, 57, 450.0, 450.0, 1680.0, -1, -1], [1127, 1196, 450.0, 150.0, 1680.0, -1, -1], [1128, 522, 150.0, 150.0, 1680.0, -1, -1], [170, 34, 1050.0, 150.0, 1680.0, -1, -1], [575, 511, 750.0, 150.0, 1680.0, -1, -1], [378, 705, 750.0, 150.0, 1680.0, -1, -1], [342, 326, 750.0, 450.0, 1680.0, -1, -1], [558, 603, 1050.0, 750.0, 1680.0, -1, -1], [1016, 970, 150.0, 150.0, 1680.0, -1, -1], [638, 791, 750.0, 1050.0, 1680.0, -1, -1], [385, 529, 150.0, 750.0, 1680.0, -1, -1], [1044, 428, 1050.0, 150.0, 1680.0, -1, -1]], [[461, 36, 1050.0, 450.0, 1680.0, -1, -1], [72, 328, 1050.0, 1050.0, 1680.0, -1, -1], [1115, 451, 1050.0, 450.0, 1680.0, -1, -1], [1072, 62, 1050.0, 750.0, 1680.0, -1, -1], [873, 120, 750.0, 450.0, 1680.0, -1, -1], [434, 97, 750.0, 150.0, 1680.0, -1, -1], [156, 635, 750.0, 450.0, 1680.0, -1, -1], [852, 1156, 750.0, 450.0, 1680.0, -1, -1], [17, 1148, 150.0, 450.0, 1680.0, -1, -1], [1167, 943, 450.0, 150.0, 1680.0, -1, -1], [774, 410, 750.0, 150.0, 1680.0, -1, -1], [421, 1174, 1050.0, 450.0, 1680.0, -1, -1], [1008, 213, 1050.0, 750.0, 1680.0, -1, -1], [1032, 1023, 150.0, 750.0, 1680.0, -1, -1], [823, 576, 150.0, 450.0, 1680.0, -1, -1], [411, 671, 450.0, 750.0, 1680.0, -1, -1], [879, 436, 750.0, 150.0, 1680.0, -1, -1], [776, 1121, 750.0, 1050.0, 1680.0, -1, -1], [1090, 480, 150.0, 150.0, 1680.0, -1, -1], [173, 272, 450.0, 450.0, 1680.0, -1, -1]], [[1102, 436, 750.0, 750.0, 1680.0, -1, -1], [1036, 522, 750.0, 750.0, 1680.0, -1, -1], [696, 233, 750.0, 450.0, 1680.0, -1, -1], [1001, 277, 150.0, 750.0, 1680.0, -1, -1], [80, 832, 150.0, 1050.0, 1680.0, -1, -1], [301, 256, 750.0, 150.0, 1680.0, -1, -1], [774, 156, 450.0, 150.0, 1680.0, -1, -1], [546, 747, 750.0, 150.0, 1680.0, -1, -1], [937, 567, 150.0, 150.0, 1680.0, -1, -1], [605, 25, 150.0, 150.0, 1680.0, -1, -1], [846, 235, 150.0, 450.0, 1680.0, -1, -1], [490, 862, 450.0, 150.0, 1680.0, -1, -1], [923, 342, 450.0, 450.0, 1680.0, -1, -1], [210, 891, 1050.0, 750.0, 1680.0, -1, -1], [1126, 518, 1050.0, 750.0, 1680.0, -1, -1], [205, 425, 750.0, 150.0, 1680.0, -1, -1], [55, 21, 750.0, 750.0, 1680.0, -1, -1], [921, 801, 750.0, 1050.0, 1680.0, -1, -1], [128, 131, 750.0, 1050.0, 1680.0, -1, -1], [228, 512, 450.0, 1050.0, 1680.0, -1, -1]], [[728, 530, 450.0, 450.0, 1680.0, -1, -1], [629, 407, 450.0, 750.0, 1680.0, -1, -1], [166, 575, 150.0, 1050.0, 1680.0, -1, -1], [185, 1176, 750.0, 450.0, 1680.0, -1, -1], [799, 628, 150.0, 750.0, 1680.0, -1, -1], [382, 648, 750.0, 450.0, 1680.0, -1, -1], [684, 206, 150.0, 450.0, 1680.0, -1, -1], [450, 41, 450.0, 1050.0, 1680.0, -1, -1], [148, 548, 150.0, 150.0, 1680.0, -1, -1], [44, 20, 750.0, 750.0, 1680.0, -1, -1], [1010, 960, 450.0, 150.0, 1680.0, -1, -1], [1026, 671, 150.0, 450.0, 1680.0, -1, -1], [367, 306, 450.0, 750.0, 1680.0, -1, -1], [625, 218, 750.0, 450.0, 1680.0, -1, -1], [423, 290, 150.0, 750.0, 1680.0, -1, -1], [1132, 420, 450.0, 750.0, 1680.0, -1, -1], [886, 1100, 450.0, 150.0, 1680.0, -1, -1], [506, 517, 150.0, 1050.0, 1680.0, -1, -1], [880, 1124, 750.0, 1050.0, 1680.0, -1, -1], [1101, 928, 150.0, 1050.0, 1680.0, -1, -1]], [[693, 351, 750.0, 1050.0, 1680.0, -1, -1], [49, 853, 150.0, 150.0, 1680.0, -1, -1], [726, 1187, 450.0, 450.0, 1680.0, -1, -1], [283, 530, 750.0, 1050.0, 1680.0, -1, -1], [1155, 821, 450.0, 150.0, 1680.0, -1, -1], [478, 995, 150.0, 450.0, 1680.0, -1, -1], [1082, 649, 1050.0, 450.0, 1680.0, -1, -1], [488, 640, 1050.0, 1050.0, 1680.0, -1, -1], [460, 844, 750.0, 750.0, 1680.0, -1, -1], [449, 98, 150.0, 750.0, 1680.0, -1, -1], [326, 1047, 450.0, 750.0, 1680.0, -1, -1], [611, 613, 750.0, 450.0, 1680.0, -1, -1], [951, 174, 150.0, 1050.0, 1680.0, -1, -1], [361, 319, 750.0, 1050.0, 1680.0, -1, -1], [445, 1166, 150.0, 1050.0, 1680.0, -1, -1], [806, 712, 1050.0, 450.0, 1680.0, -1, -1], [1114, 83, 150.0, 750.0, 1680.0, -1, -1], [206, 547, 150.0, 450.0, 1680.0, -1, -1], [167, 911, 450.0, 1050.0, 1680.0, -1, -1], [886, 813, 450.0, 750.0, 1680.0, -1, -1]], [[897, 258, 1050.0, 450.0, 1680.0, -1, -1], [244, 883, 1050.0, 150.0, 1680.0, -1, -1], [605, 568, 450.0, 1050.0, 1680.0, -1, -1], [1145, 8, 450.0, 1050.0, 1680.0, -1, -1], [1185, 43, 150.0, 450.0, 1680.0, -1, -1], [533, 423, 450.0, 750.0, 1680.0, -1, -1], [303, 1110, 450.0, 750.0, 1680.0, -1, -1], [637, 1199, 750.0, 1050.0, 1680.0, -1, -1], [344, 1116, 750.0, 1050.0, 1680.0, -1, -1], [860, 249, 450.0, 1050.0, 1680.0, -1, -1], [419, 581, 150.0, 150.0, 1680.0, -1, -1], [241, 1165, 150.0, 750.0, 1680.0, -1, -1], [279, 153, 750.0, 750.0, 1680.0, -1, -1], [895, 1030, 750.0, 750.0, 1680.0, -1, -1], [1, 253, 1050.0, 1050.0, 1680.0, -1, -1], [717, 624, 1050.0, 750.0, 1680.0, -1, -1], [1170, 1008, 150.0, 1050.0, 1680.0, -1, -1], [783, 417, 150.0, 750.0, 1680.0, -1, -1], [1046, 407, 1050.0, 1050.0, 1680.0, -1, -1], [625, 348, 1050.0, 450.0, 1680.0, -1, -1]], [[736, 1077, 150.0, 1050.0, 1680.0, -1, -1], [1186, 872, 1050.0, 750.0, 1680.0, -1, -1], [1196, 138, 1050.0, 450.0, 1680.0, -1, -1], [595, 42, 1050.0, 450.0, 1680.0, -1, -1], [813, 553, 450.0, 150.0, 1680.0, -1, -1], [20, 715, 750.0, 1050.0, 1680.0, -1, -1], [1114, 621, 450.0, 1050.0, 1680.0, -1, -1], [531, 992, 450.0, 1050.0, 1680.0, -1, -1], [1045, 92, 750.0, 150.0, 1680.0, -1, -1], [865, 142, 750.0, 150.0, 1680.0, -1, -1], [906, 40, 450.0, 450.0, 1680.0, -1, -1], [190, 823, 750.0, 750.0, 1680.0, -1, -1], [427, 1081, 450.0, 450.0, 1680.0, -1, -1], [683, 551, 150.0, 150.0, 1680.0, -1, -1], [1071, 754, 1050.0, 150.0, 1680.0, -1, -1], [345, 608, 750.0, 750.0, 1680.0, -1, -1], [475, 803, 1050.0, 450.0, 1680.0, -1, -1], [990, 531, 750.0, 450.0, 1680.0, -1, -1], [529, 500, 150.0, 1050.0, 1680.0, -1, -1], [648, 884, 450.0, 750.0, 1680.0, -1, -1]], [[388, 148, 450.0, 1050.0, 1680.0, -1, -1], [1190, 303, 750.0, 1050.0, 1680.0, -1, -1], [1078, 332, 450.0, 450.0, 1680.0, -1, -1], [902, 739, 750.0, 1050.0, 1680.0, -1, -1], [492, 237, 450.0, 750.0, 1680.0, -1, -1], [139, 217, 450.0, 1050.0, 1680.0, -1, -1], [658, 1008, 150.0, 450.0, 1680.0, -1, -1], [92, 113, 150.0, 450.0, 1680.0, -1, -1], [71, 1012, 1050.0, 750.0, 1680.0, -1, -1], [562, 241, 450.0, 150.0, 1680.0, -1, -1], [454, 818, 450.0, 1050.0, 1680.0, -1, -1], [921, 773, 450.0, 450.0, 1680.0, -1, -1], [482, 580, 1050.0, 1050.0, 1680.0, -1, -1], [433, 925, 750.0, 750.0, 1680.0, -1, -1], [1016, 227, 450.0, 150.0, 1680.0, -1, -1], [94, 31, 150.0, 1050.0, 1680.0, -1, -1], [654, 784, 750.0, 450.0, 1680.0, -1, -1], [819, 327, 450.0, 150.0, 1680.0, -1, -1], [31, 793, 450.0, 150.0, 1680.0, -1, -1], [1156, 777, 750.0, 450.0, 1680.0, -1, -1]], [[162, 947, 750.0, 150.0, 1680.0, -1, -1], [72, 1099, 150.0, 450.0, 1680.0, -1, -1], [87, 560, 150.0, 1050.0, 1680.0, -1, -1], [186, 389, 150.0, 1050.0, 1680.0, -1, -1], [266, 571, 450.0, 1050.0, 1680.0, -1, -1], [798, 675, 750.0, 750.0, 1680.0, -1, -1], [497, 502, 150.0, 450.0, 1680.0, -1, -1], [716, 877, 150.0, 750.0, 1680.0, -1, -1], [1120, 845, 450.0, 1050.0, 1680.0, -1, -1], [143, 547, 150.0, 750.0, 1680.0, -1, -1], [363, 197, 450.0, 150.0, 1680.0, -1, -1], [416, 876, 150.0, 150.0, 1680.0, -1, -1], [186, 1050, 1050.0, 750.0, 1680.0, -1, -1], [203, 640, 150.0, 450.0, 1680.0, -1, -1], [1088, 67, 1050.0, 450.0, 1680.0, -1, -1], [809, 913, 150.0, 750.0, 1680.0, -1, -1], [185, 512, 750.0, 150.0, 1680.0, -1, -1], [618, 70, 1050.0, 150.0, 1680.0, -1, -1], [534, 641, 450.0, 750.0, 1680.0, -1, -1], [778, 239, 750.0, 150.0, 1680.0, -1, -1]], [[870, 502, 450.0, 750.0, 1680.0, -1, -1], [693, 1043, 1050.0, 1050.0, 1680.0, -1, -1], [214, 265, 1050.0, 150.0, 1680.0, -1, -1], [596, 321, 450.0, 750.0, 1680.0, -1, -1], [797, 1067, 750.0, 150.0, 1680.0, -1, -1], [838, 707, 450.0, 150.0, 1680.0, -1, -1], [89, 615, 750.0, 1050.0, 1680.0, -1, -1], [610, 652, 750.0, 750.0, 1680.0, -1, -1], [666, 1065, 150.0, 150.0, 1680.0, -1, -1], [304, 649, 750.0, 750.0, 1680.0, -1, -1], [1173, 140, 1050.0, 750.0, 1680.0, -1, -1], [982, 930, 750.0, 1050.0, 1680.0, -1, -1], [160, 1185, 150.0, 450.0, 1680.0, -1, -1], [99, 1072, 1050.0, 750.0, 1680.0, -1, -1], [502, 1175, 750.0, 750.0, 1680.0, -1, -1], [758, 824, 750.0, 1050.0, 1680.0, -1, -1], [697, 1089, 450.0, 150.0, 1680.0, -1, -1], [303, 512, 450.0, 450.0, 1680.0, -1, -1], [230, 378, 1050.0, 150.0, 1680.0, -1, -1], [203, 1117, 750.0, 150.0, 1680.0, -1, -1]], [[418, 535, 150.0, 150.0, 1680.0, -1, -1], [149, 445, 450.0, 1050.0, 1680.0, -1, -1], [44, 753, 1050.0, 750.0, 1680.0, -1, -1], [450, 410, 1050.0, 450.0, 1680.0, -1, -1], [871, 926, 750.0, 450.0, 1680.0, -1, -1], [987, 148, 750.0, 1050.0, 1680.0, -1, -1], [412, 16, 1050.0, 1050.0, 1680.0, -1, -1], [156, 826, 1050.0, 150.0, 1680.0, -1, -1], [720, 938, 150.0, 450.0, 1680.0, -1, -1], [613, 11, 150.0, 750.0, 1680.0, -1, -1], [1049, 646, 750.0, 1050.0, 1680.0, -1, -1], [1110, 1060, 1050.0, 750.0, 1680.0, -1, -1], [926, 618, 450.0, 1050.0, 1680.0, -1, -1], [1200, 287, 450.0, 750.0, 1680.0, -1, -1], [19, 868, 150.0, 750.0, 1680.0, -1, -1], [861, 823, 750.0, 150.0, 1680.0, -1, -1], [185, 184, 150.0, 1050.0, 1680.0, -1, -1], [550, 951, 750.0, 750.0, 1680.0, -1, -1], [985, 689, 1050.0, 1050.0, 1680.0, -1, -1], [238, 990, 750.0, 450.0, 1680.0, -1, -1]]]
number 20
initregion [[0, 0, 0, 150.0, 150.0], [0, 0, 0, 450.0, 150.0], [0, 3, 0, 750.0, 150.0], [0, 1, 0, 1050.0, 150.0], [0, 0, 0, 150.0, 450.0], [0, 1, 0, 450.0, 450.0], [0, 1, 0, 750.0, 450.0], [0, 3, 0, 1050.0, 450.0], [0, 2, 0, 150.0, 750.0], [0, 1, 0, 450.0, 750.0], [0, 0, 0, 750.0, 750.0], [0, 2, 0, 1050.0, 750.0], [0, 3, 0, 150.0, 1050.0], [0, 0, 0, 450.0, 1050.0], [0, 1, 0, 750.0, 1050.0], [0, 2, 0, 1050.0, 1050.0]]


bestreward   [3, 3, 3, 2, 4, 5, 4, 4, 4, 4, 3]      预算充足
worstreward [8, 9, 9, 6, 5, 6, 9, 11, 9, 7, 7]    无预算
[3, 3, 3, 2, 4, 5, 4, 4, 8, 9, 9]

T=120  
bestreward  [7, 7, 9, 7, 5, 4, 5, 2, 6, 8, 9, 6, 8, 7, 7, 7, 7, 3, 7, 5, 4, 9, 5, 6, 5, 5, 3, 4, 4, 6, 8, 9, 8, 9, 6, 4, 8, 10, 7, 4, 6, 6, 4, 3, 6, 6, 11, 11, 7, 5, 7, 4, 6, 6, 3, 7, 4, 4, 6, 11, 7, 3, 6, 7, 8, 3, 6, 8, 5, 6, 7, 8, 4, 8, 8, 8, 4, 9, 7, 6, 6, 6, 4, 5, 5, 6, 6, 9, 8, 6, 8, 9, 6, 5, 4, 4, 5, 6, 8, 11, 8, 8, 7, 8, 5, 7, 6, 6, 10, 5, 4, 4, 5, 5, 5, 6, 3, 5, 6]
worstreward [11, 12, 10, 9, 9, 8, 9, 7, 8, 12, 9, 8, 9, 13, 12, 11, 10, 7, 10, 11, 10, 11, 11, 11, 8, 8, 10, 6, 10, 9, 7, 11, 13, 13, 10, 11, 10, 14, 11, 8, 11, 10, 10, 9, 11, 7, 13, 15, 11, 9, 12, 8, 9, 9, 8, 8, 11, 8, 11, 14, 10, 6, 14, 12, 7, 9, 10, 10, 11, 10, 7, 6, 6, 9, 11, 13, 11, 15, 11, 11, 9, 7, 8, 10, 10, 10, 9, 12, 13, 12, 12, 15, 14, 10, 10, 12, 8, 12, 10, 13, 9, 11, 11, 10, 9, 12, 13, 11, 10, 11, 10, 8, 9, 13, 11, 8, 11, 11, 13]



